services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: aipromotdb
    restart: unless-stopped
    environment:
      POSTGRES_DB: aipromotdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d aipromotdb"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - aipromotnetwork
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp
      - /var/run/postgresql

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: aipromot_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass redispassword --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redispassword", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - aipromotnetwork
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: aipromotbackend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3001
      HOST: 0.0.0.0
      DATABASE_URL: postgresql://user:password@postgres:5432/aipromotdb
      REDIS_URL: redis://:redispassword@redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      CORS_ORIGINS: http://localhost:3000
      LOG_LEVEL: info
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - aipromotnetwork
    volumes:
      - ./backend/src:/app/src:ro
      - ./backend/prisma:/app/prisma:ro

  # Frontend Next.js App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: aipromotfrontend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: your-nextauth-secret-change-in-production
      NEXT_TELEMETRY_DISABLED: 1
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - aipromotnetwork
    volumes:
      - ./frontend/src:/app/src:ro
      - ./frontend/pages:/app/pages:ro

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  aipromotnetwork:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
