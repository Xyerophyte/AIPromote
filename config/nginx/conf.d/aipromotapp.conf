# AI Promote Application Server Configuration

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name aipromotapp.com www.aipromotapp.com;
    
    # Security headers for HTTP redirects
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Redirect to HTTPS
    return 301 https://$server_name$request_uri;
}

# Main HTTPS Server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name aipromotapp.com www.aipromotapp.com;

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/private.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1h;
    ssl_session_tickets off;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/nginx/ssl/cert.pem;

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.sentry.io https://browser.sentry-cdn.com https://js.stripe.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https: blob:; connect-src 'self' https://api.aipromotapp.com wss://api.aipromotapp.com https://sentry.io https://*.sentry.io https://api.stripe.com; frame-src https://js.stripe.com https://hooks.stripe.com;" always;

    # Rate Limiting
    limit_req zone=general burst=20 nodelay;
    limit_conn perip 10;
    limit_conn perserver 1000;

    # Root and Index
    root /var/www/html;
    index index.html;

    # Static Assets with Long Cache
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Enable compression
        gzip_static on;
        brotli_static on;
        
        # Try files, fallback to frontend
        try_files $uri @frontend;
    }

    # Next.js static files
    location /_next/static/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        proxy_pass http://frontend;
        proxy_cache my_cache;
        proxy_cache_valid 200 1y;
    }

    # API Routes
    location /api/ {
        # Rate limiting for API
        limit_req zone=api burst=50 nodelay;
        
        # Auth endpoints have stricter rate limiting
        location /api/auth/ {
            limit_req zone=login burst=5 nodelay;
            proxy_pass http://backend;
            include /etc/nginx/proxy_params;
        }

        # Default API handling
        proxy_pass http://backend;
        include /etc/nginx/proxy_params;
        
        # API-specific headers
        add_header X-API-Version "1.0" always;
        
        # CORS for API (if needed)
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://aipromotapp.com';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Health Check Endpoint
    location /health {
        proxy_pass http://backend;
        proxy_cache my_cache;
        proxy_cache_valid 200 1m;
        access_log off;
    }

    # Webhook endpoints (no caching)
    location /webhook/ {
        proxy_pass http://backend;
        proxy_buffering off;
        proxy_cache off;
        include /etc/nginx/proxy_params;
    }

    # File uploads
    location /upload {
        client_max_body_size 100m;
        proxy_pass http://backend;
        proxy_request_buffering off;
        include /etc/nginx/proxy_params;
    }

    # Frontend Application
    location / {
        # Try files first, then proxy to frontend
        try_files $uri $uri/ @frontend;
    }

    # Frontend proxy fallback
    location @frontend {
        proxy_pass http://frontend;
        include /etc/nginx/proxy_params;
        
        # Add caching for HTML pages
        proxy_cache my_cache;
        proxy_cache_valid 200 5m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;
        proxy_cache_lock on;
        
        # Add headers
        add_header X-Cache-Status $upstream_cache_status;
    }

    # Security: Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ \.(env|config|log)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Custom Error Pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        internal;
    }
    
    location = /50x.html {
        internal;
    }

    # Monitoring endpoints for tools like Prometheus
    location /metrics {
        stub_status on;
        access_log off;
        
        # Restrict access to monitoring tools
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        deny all;
    }

    # Security: Block common exploit attempts
    location ~* \.(php|asp|aspx|jsp)$ {
        return 444;
    }

    location ~* (eval\(|javascript:|base64_decode|gzip|deflate) {
        return 444;
    }
}

# Staging Server (if needed)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name staging.aipromotapp.com;

    # SSL Configuration (same as production)
    ssl_certificate /etc/nginx/ssl/staging-cert.pem;
    ssl_certificate_key /etc/nginx/ssl/staging-private.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;

    # Basic auth for staging (optional)
    auth_basic "Staging Environment";
    auth_basic_user_file /etc/nginx/.htpasswd;

    # Similar configuration as production but with different upstreams
    location /api/ {
        proxy_pass http://backend;
        include /etc/nginx/proxy_params;
    }

    location / {
        proxy_pass http://frontend;
        include /etc/nginx/proxy_params;
    }
}
